#!/bin/bash

ENV_FILE=".env"

# Set the userid to run docker-compose script as. This is so that files created in a container are
CURRENT_UID=$(id -u):$(id -g)
export CURRENT_UID

# Determine compose file location and php service name based on the first argument, which should be 'data', 'dist' or 'doc'
case $1 in
  data)
      COMPOSE_FILE="./docker/docker-compose.data.yml"
      SERVICE_NAME="data_php"
      ;;
  dist)
      COMPOSE_FILE="./docker/docker-compose.distribution.yml"
      SERVICE_NAME="dist_php"
      ;;
  doc)
      COMPOSE_FILE="./docker/docker-compose.documentation.yml"
      SERVICE_NAME="doc_php"
      ;;
esac

# Exit with error if $1 is empty, or invalid
if [[ -z $COMPOSE_FILE ]]
then
  echo "Error: Use data, dist or doc as first argument!"
  exit 1
fi

start_services () {
  if [[ -e $ENV_FILE ]]; then
    docker-compose --env-file "./../"$ENV_FILE -p environet -f $COMPOSE_FILE up -d
  else
    docker-compose -p environet -f $COMPOSE_FILE up -d
  fi

  if [[ $? != 0 ]]
  then
    echo
    echo -e "\e[31mCould not start services"
    exit 1
  fi
}

# If $2 is up, do not forward command to the container, just start the services
if [[ $2 = "up" ]]
then
  start_services $1
  exit 0
fi

# If $2 is down, do not forward command to the container, just stop the services
if [[ $2 = "down" ]]
then
  docker-compose -p environet -f $COMPOSE_FILE down
  exit 0
fi

if [[ $2 = "stop" ]]
then
  docker-compose -p environet -f $COMPOSE_FILE stop
  exit 0
fi

start_services $1

# TODO Pass all arguments. $@ doesn't seem to work...
docker-compose -p environet -f $COMPOSE_FILE exec -T $SERVICE_NAME bash -c "/var/www/html/bin/environet $1 $2 $3 $4"

if [[ $? != 0 ]]
then
  echo
  echo -e "\e[31mAn error occured while running your command. There may be additional information above." >&2
  exit 1
fi
